definitions:
  handlers.createNewsRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  handlers.loginRequest:
    properties:
      full_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  handlers.loginResponse:
    properties:
      access_token:
        type: string
      full_name:
        type: string
      refresh_token:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  handlers.registerRequest:
    properties:
      address:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  handlers.subscriptionRequest:
    properties:
      active:
        type: boolean
    type: object
  handlers.updateNewsRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  models.Document:
    properties:
      description:
        type: string
      filename:
        type: string
      filepath:
        type: string
      id:
        type: integer
      is_public:
        type: boolean
      uploaded_at:
        type: string
      user_id:
        type: integer
    type: object
  models.News:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  models.UpdateUserRequest:
    properties:
      address:
        type: string
      email:
        type: string
      full_name:
        type: string
      phone:
        type: string
      role:
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      hasSubscription:
        type: boolean
      id:
        type: integer
      phone:
        type: string
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  title: Edutalks API
paths:
  /admin/news:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные новости
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.createNewsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Новость создана
          schema:
            type: string
        "400":
          description: Ошибка запроса
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Создать новость (только admin)
      tags:
      - news
  /admin/news/{id}:
    delete:
      parameters:
      - description: ID новости
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Удалено
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Удалить новость (только admin)
      tags:
      - admin
    patch:
      parameters:
      - description: ID новости
        in: path
        name: id
        required: true
        type: integer
      - description: Новое содержимое
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.updateNewsRequest'
      responses:
        "200":
          description: Обновлено
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Обновить новость (только admin)
      tags:
      - admin
  /admin/users/{id}/subscription:
    patch:
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Статус подписки
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.subscriptionRequest'
      responses:
        "200":
          description: Статус обновлён
          schema:
            type: string
        "400":
          description: Ошибка запроса
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Включение или отключение подписки у пользователя (только admin)
      tags:
      - admin
  /api/admin/dashboard:
    get:
      responses:
        "200":
          description: Доступно только администратору
          schema:
            type: string
        "403":
          description: Доступ запрещён
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Доступ только для администратора
      tags:
      - admin
  /api/admin/files/{id}:
    delete:
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Документ удалён
          schema:
            type: string
        "404":
          description: Документ не найден
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Удаление документа (только для админа)
      tags:
      - admin
  /api/admin/files/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Файл документа
        in: formData
        name: file
        required: true
        type: file
      - description: Описание файла
        in: formData
        name: description
        type: string
      - description: Доступен по подписке?
        in: formData
        name: is_public
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Файл загружен
          schema:
            type: string
        "400":
          description: Ошибка загрузки
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Загрузка документа (только для админа)
      tags:
      - admin
  /api/admin/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "403":
          description: Доступ запрещён
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получить всех пользователей с ролью user
      tags:
      - admin
  /api/admin/users/{id}:
    get:
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Невалидный ID
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получить пользователя по ID
      tags:
      - admin
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Что обновить
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь обновлён
          schema:
            type: string
        "400":
          description: Ошибка валидации
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Частичное обновление пользователя
      tags:
      - admin
  /api/files:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Document'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Список доступных документов (по подписке)
      tags:
      - files
  /api/files/{id}:
    get:
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "404":
          description: Документ не найден
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Скачать документ по ID
      tags:
      - files
  /api/profile:
    get:
      responses:
        "200":
          description: Привет, пользователь с ролью
          schema:
            type: string
        "401":
          description: Нет доступа
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Защищённый маршрут (тест)
      tags:
      - protected
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.loginResponse'
        "401":
          description: Неверный логин или пароль
          schema:
            type: string
      summary: Авторизация пользователя
      tags:
      - auth
  /news/{id}:
    get:
      parameters:
      - description: ID новости
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.News'
        "404":
          description: Не найдено
          schema:
            type: string
      summary: Получить новость по ID
      tags:
      - news
  /refresh:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Недействительный refresh токен
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Обновление access-токена
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные регистрации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Пользователь успешно зарегистрирован
          schema:
            type: string
        "400":
          description: Ошибка валидации
          schema:
            type: string
      summary: Регистрация нового пользователя
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    description: Документация API Edutalks (регистрация, логин, токены и т.д.).
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
